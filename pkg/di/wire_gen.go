// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"MAXPUMP1/pkg/api/handlers"
	"MAXPUMP1/pkg/db"
	"MAXPUMP1/pkg/repository"
	"MAXPUMP1/pkg/usecase"
)

// Injectors from wire.go:

func InitializeUserApi() *handlers.UserHandler {
	gormDB := db.ConnectDB()
	userInterface := repository.NewUserRepository(gormDB)
	userUsecaseInterface := usecase.NewUser(userInterface)
	categoryInterface := repository.NewCategoryRepository(gormDB)
	categoryUsecaseInterface := usecase.NewCategory(categoryInterface)
	productInterface := repository.NewProductRepository(gormDB)
	productUsecaseInterface := usecase.NewProduct(productInterface)
	cartInterface := repository.NewCartRepository(gormDB)
	cartUsecaseInterface := usecase.NewCart(cartInterface)
	orderInterface := repository.NewOrderRepository(gormDB)
	orderUsecaseInterface := usecase.NewOrder(orderInterface)
	userHandler := handlers.NewUserHandler(userUsecaseInterface, categoryUsecaseInterface, productUsecaseInterface, cartUsecaseInterface, orderUsecaseInterface)
	return userHandler
}

func InitializeAdminApi() *handlers.AdminHandler {
	gormDB := db.ConnectDB()
	adminInterface := repository.NewAdminRepository(gormDB)
	adminUsecaseInterface := usecase.NewAdmin(adminInterface)
	categoryInterface := repository.NewCategoryRepository(gormDB)
	categoryUsecaseInterface := usecase.NewCategory(categoryInterface)
	productInterface := repository.NewProductRepository(gormDB)
	productUsecaseInterface := usecase.NewProduct(productInterface)
	orderInterface := repository.NewOrderRepository(gormDB)
	orderUsecaseInterface := usecase.NewOrder(orderInterface)
	adminHandler := handlers.NewAdminHandler(adminUsecaseInterface, categoryUsecaseInterface, productUsecaseInterface, orderUsecaseInterface)
	return adminHandler
}
