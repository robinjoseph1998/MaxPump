// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/addaddress": {
            "post": {
                "description": "User Address Adding",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Address Management"
                ],
                "summary": "Add Address",
                "parameters": [
                    {
                        "description": "User address information",
                        "name": "UserAddress",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Address"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Address"
                    },
                    "400": {
                        "description": "error\":\"Status Bad Request"
                    },
                    "500": {
                        "description": "error\":\"Internal Server Error"
                    }
                }
            }
        },
        "/addtocart": {
            "post": {
                "description": "Adding Product To User Cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Cart Management"
                ],
                "summary": "Adding Product To Cart",
                "responses": {
                    "200": {
                        "description": "message"
                    },
                    "500": {
                        "description": "error\":\"Internal Server Error"
                    }
                }
            }
        },
        "/adminlogin": {
            "post": {
                "description": "Admin Login Otp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Registration and Login"
                ],
                "summary": "Admin Login",
                "parameters": [
                    {
                        "description": "Phone",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.LoginPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Otp send to"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/adminloginpassword": {
            "post": {
                "description": "Admin Login using password and phone number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Registration and Login"
                ],
                "summary": "Admin Login With Password",
                "parameters": [
                    {
                        "description": "Phone and Password",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.AdminLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\":\"Admin Logged in Successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/adminlogout": {
            "post": {
                "description": "Logout By Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Registration and Login"
                ],
                "summary": "Admin Logout",
                "responses": {
                    "200": {
                        "description": "message\":\"logged out successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/adminotpvalidation": {
            "post": {
                "description": "Validating Entered Otp By User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Registration and Login"
                ],
                "summary": "Login Otp Validation",
                "parameters": [
                    {
                        "description": "Phone,Otp and Resend",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.OtpKey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\":\"OTP resend successful"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/allproducts": {
            "get": {
                "description": "Listing all products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Category and Product Management"
                ],
                "summary": "Listing Products",
                "responses": {
                    "200": {
                        "description": "Products"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/allusers": {
            "get": {
                "description": "List All Users in Admin Side",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Side User Management"
                ],
                "summary": "List Users",
                "responses": {
                    "200": {
                        "description": "users"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/cancelorder": {
            "post": {
                "description": "Cancell The Order By User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Checkout Management"
                ],
                "summary": "Cancell Order",
                "responses": {
                    "202": {
                        "description": "Order\":CancelledOrder,\"Address"
                    },
                    "208": {
                        "description": "message\":\"this item is already cancelled"
                    },
                    "500": {
                        "description": "error\":\"Internal Server Error"
                    }
                }
            }
        },
        "/categoriesview": {
            "get": {
                "description": "List All Categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Category and Product Management"
                ],
                "summary": "View Categories",
                "responses": {
                    "200": {
                        "description": "Categories"
                    },
                    "400": {
                        "description": "error\":\"Internal Server Error"
                    }
                }
            }
        },
        "/createcategory": {
            "post": {
                "description": "Category Creation by Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Category Management"
                ],
                "summary": "Create Category",
                "responses": {
                    "201": {
                        "description": "Category"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/createproduct": {
            "post": {
                "description": "Admin Product Adding",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product Management"
                ],
                "summary": "Add Product",
                "responses": {
                    "201": {
                        "description": "responseData"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/deletecartproducts": {
            "delete": {
                "description": "Removing Product From Cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Cart Management"
                ],
                "summary": "Product Delete From Cart",
                "responses": {
                    "202": {
                        "description": "message\":\"product removed from your cart"
                    },
                    "400": {
                        "description": "error\":\"Status Bad Request"
                    },
                    "500": {
                        "description": "error\":\"Internal Server Error"
                    }
                }
            }
        },
        "/deletecategory": {
            "post": {
                "description": "Admin Delete Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Category Management"
                ],
                "summary": "Delete Category",
                "responses": {
                    "200": {
                        "description": "message\":\"Category deleted successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/deleteproduct": {
            "post": {
                "description": "Admin Product Delete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product Management"
                ],
                "summary": "Delete Product",
                "responses": {
                    "200": {
                        "description": "message\":\"Product Deleted successfully"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/editaddress": {
            "patch": {
                "description": "Edit The Address By User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Address Management"
                ],
                "summary": "Edit User Address",
                "parameters": [
                    {
                        "description": "Edited Address",
                        "name": "UserAddress",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.EditAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Status Accepted"
                    },
                    "400": {
                        "description": "error\":\"Status Bad Request"
                    },
                    "500": {
                        "description": "error\":\"Internal Server Error"
                    }
                }
            }
        },
        "/listcart": {
            "get": {
                "description": "Listing User's Cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Cart Management"
                ],
                "summary": "List User Cart",
                "responses": {
                    "200": {
                        "description": "message\":\"Cart and CartItems"
                    },
                    "500": {
                        "description": "error\":\"Internal Server Error"
                    }
                }
            }
        },
        "/listcategory": {
            "get": {
                "description": "Admin Listing Categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Category Management"
                ],
                "summary": "List Categories",
                "responses": {
                    "200": {
                        "description": "Categories"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/listproducts": {
            "get": {
                "description": "Admin List Products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product Management"
                ],
                "summary": "List Products",
                "responses": {
                    "200": {
                        "description": "Products"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/loginwithpassord": {
            "post": {
                "description": "Validating entered Password by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Authentication"
                ],
                "summary": "Login With Password",
                "parameters": [
                    {
                        "description": "Phone and Password",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\":\t\"user logged in succesfully and cookie stored"
                    },
                    "400": {
                        "description": "error\":\t\"Bad Request"
                    },
                    "404": {
                        "description": "error\":\t\"Status Not Found"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "User Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Authentication"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "message\":\"logged out successfully"
                    },
                    "400": {
                        "description": "error\":\"user cookie deletion failed"
                    }
                }
            }
        },
        "/placeorder": {
            "post": {
                "description": "Place Order By User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Checkout Management"
                ],
                "summary": "Place Order",
                "responses": {
                    "202": {
                        "description": "message\":\"Order Placed\",\"Items\":OrderStatus,\"Address"
                    },
                    "400": {
                        "description": "error\":\"Bad Request"
                    },
                    "500": {
                        "description": "error\":\"Internal Server Error"
                    }
                }
            }
        },
        "/productdetail": {
            "get": {
                "description": "Showing Product Detaily",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Category and Product Management"
                ],
                "summary": "Showing Product Details",
                "responses": {
                    "200": {
                        "description": "product"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/productsbycategory": {
            "get": {
                "description": "List Category With Products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Category and Product Management"
                ],
                "summary": "Category with Products",
                "responses": {
                    "200": {
                        "description": "category and products"
                    },
                    "500": {
                        "description": "error\":\"Internal Server Error"
                    }
                }
            }
        },
        "/registeradmin": {
            "post": {
                "description": "Registering New Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Registration and Login"
                ],
                "summary": "New Admin Register",
                "responses": {
                    "201": {
                        "description": "Newly Registred Admin",
                        "schema": {
                            "$ref": "#/definitions/entity.Admin"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/searchuser": {
            "get": {
                "description": "Search User By id and firstname",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Side User Management"
                ],
                "summary": "Search User",
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/showprofile": {
            "get": {
                "description": "Show User's Profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Address Management"
                ],
                "summary": "Show Profile",
                "responses": {
                    "200": {
                        "description": "Profile\":\"entity.Profile\",\"Address"
                    },
                    "500": {
                        "description": "error\":\"Internal Server Error"
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Register a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Authentication"
                ],
                "summary": "User Signup",
                "parameters": [
                    {
                        "description": "User Signup Input",
                        "name": "userInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Signup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Newly registered user",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/signupotp": {
            "post": {
                "description": "Adding new user to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Authentication"
                ],
                "summary": "signup with otp",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Signup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/signupotpvalidation": {
            "post": {
                "description": "Validating entered OTP by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Authentication"
                ],
                "summary": "Signup OTP Validation",
                "parameters": [
                    {
                        "description": "Key and OTP",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.OtpValidation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\":\t\"user signup successful"
                    },
                    "400": {
                        "description": "error\":\t\"Bad Request"
                    },
                    "401": {
                        "description": "error\":\t\"Unauthorized"
                    }
                }
            }
        },
        "/updateaddress": {
            "put": {
                "description": "Updating Address By User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Address Management"
                ],
                "summary": "Update User Address",
                "parameters": [
                    {
                        "description": "Updated Address",
                        "name": "UserAddress",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.EditAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Address"
                    },
                    "400": {
                        "description": "error\":\"Status Bad Request"
                    },
                    "500": {
                        "description": "error\":\"Internal Server Error"
                    }
                }
            }
        },
        "/updatecategory": {
            "patch": {
                "description": "Admin Update Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Category Management"
                ],
                "summary": "Update Category",
                "responses": {
                    "200": {
                        "description": "Updated Category"
                    },
                    "404": {
                        "description": "error\":\"category not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/updateproduct": {
            "post": {
                "description": "Product Updation by Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Product Management"
                ],
                "summary": "Update Product",
                "responses": {
                    "200": {
                        "description": "Product"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "error\":\"product not found"
                    },
                    "500": {
                        "description": "error\":\"Failed to fetch product from database"
                    }
                }
            }
        },
        "/userblock": {
            "post": {
                "description": "Block User By Admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Side User Management"
                ],
                "summary": "Block User",
                "responses": {
                    "200": {
                        "description": "message\":\"User Blocked Successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/userunblock": {
            "post": {
                "description": "Unblock user by admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin Side User Management"
                ],
                "summary": "Unblock User",
                "responses": {
                    "200": {
                        "description": "message\":\"User Unblocked Successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/viewaddresses": {
            "get": {
                "description": "View All Saved Addresses By User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Address Management"
                ],
                "summary": "View Addresses",
                "responses": {
                    "200": {
                        "description": "Addresses"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/vieworder": {
            "get": {
                "description": "View Order By User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Checkout Management"
                ],
                "summary": "View Order",
                "responses": {
                    "202": {
                        "description": "Items\":Order,\"Address"
                    },
                    "500": {
                        "description": "error\":\"Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "house_name": {
                    "type": "string"
                },
                "landmark": {
                    "type": "string"
                },
                "pincode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "entity.Admin": {
            "type": "object",
            "required": [
                "adminname",
                "email",
                "password",
                "phone",
                "role"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "adminname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "required": [
                "email",
                "firstname",
                "lastname",
                "phone"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "wallet": {
                    "type": "integer"
                }
            }
        },
        "model.Signup": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "utils.AdminLogin": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "utils.EditAddressRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "house_name": {
                    "type": "string"
                },
                "landmark": {
                    "type": "string"
                },
                "pincode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "utils.LoginPayload": {
            "type": "object",
            "properties": {
                "phone": {
                    "type": "string"
                }
            }
        },
        "utils.OtpKey": {
            "type": "object",
            "properties": {
                "otp": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "resend": {
                    "type": "string"
                }
            }
        },
        "utils.OtpValidation": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "utils.UserLogin": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
